<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017 by European Commission
  ~
  ~ Licensed under the EUPL, Version 1.2 or - as soon they will be
  ~ approved by the European Commission - subsequent versions of the
  ~ EUPL (the "Licence");
  ~ You may not use this work except in compliance with the Licence.
  ~ You may obtain a copy of the Licence at:
  ~ https://joinup.ec.europa.eu/page/eupl-text-11-12
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the Licence is distributed on an "AS IS" basis,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
  ~ implied.
  ~ See the Licence for the specific language governing permissions and
  ~ limitations under the Licence.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

    <import resource="classpath:specificProxyServiceEnvironmentContext.xml" />

    <import resource="classpath:specificCommunicationDefinitionApplicationContext.xml"/>

    <!-- PROPERTIES -->
    <bean id="applicationContextProvider" class="member_country_specific.specific.proxyservice.SpecificProxyServiceApplicationContextProvider"/>

    <bean id="specificProxyServiceConfigWithPath" class="java.lang.String">
        <constructor-arg value="file:#{specificProxyServiceConfigRepository}#{specificProxyServiceConfigFile}"/>
    </bean>

    <bean id="specificProxyServiceConfigFile" class="java.lang.String">
        <constructor-arg value="specificProxyService.xml"/>
    </bean>

    <bean id="deploymentSpecificProxyServiceConfig" class="java.lang.String">
        <constructor-arg value="classpath:deploymentSpecificProxyServiceConfig.properties" />
    </bean>

    <bean id="specificProxyserviceProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="order" value="0"/>
        <property name="locations">
            <list>
                <ref bean="specificProxyServiceConfigWithPath"/>
                <ref bean="deploymentSpecificProxyServiceConfig"/>
            </list>
        </property>
        <property name="fileEncoding" value="UTF-8" />
    </bean>

    <bean id="useDistributedMapsSpecificProxyService" class="java.lang.String">
        <constructor-arg value="${distributedMapsSpecificProxyService}"/>
    </bean>

    <!-- suffix for some of the beans having two possible implementations - one for development and one for production -->
    <bean id="distributedEnvSuffixSpecificProxyService" class="java.lang.String">
        <constructor-arg value="#{useDistributedMapsSpecificProxyService.toString()=='false'?'Dev':'Prod'}"/>
    </bean>

    <!-- production environment hazelcast instance name -->
    <bean id="defaultHazelcastInstance" class="java.lang.String">
        <constructor-arg value="eidasHazelcastInstance"/>
    </bean>
    <!-- production environment hazelcast initializer bean - injected into map providers -->
    <bean id="eidasHazelcastInstanceInitializer" class=" eu.eidas.auth.commons.cache.HazelcastInstanceInitializer" init-method="initializeInstance" lazy-init="true">
        <property name="hazelcastConfigfileName" value="#{eidasConfigRepository}hazelcast.xml"/>
        <property name="hazelcastInstanceName" ref="defaultHazelcastInstance"/>
    </bean>

    <bean id="specificMSIdpRequestCorrelationMap" class="member_country_specific.specific.proxyservice.tx.StoredMSProxyServiceRequestCorrelationMap">
        <constructor-arg ref="springServiceCMapspecificMSIdpCorProvider#{distributedEnvSuffixSpecificProxyService.toString()}"/>
    </bean>
    <bean id="tokenRequestCorrelationMap" class="member_country_specific.specific.proxyservice.tx.StoredMSProxyServiceTokenRequestCorrelationMap">
        <constructor-arg ref="springServiceCMapspecificMSTokenIdpCorProvider#{distributedEnvSuffixSpecificProxyService.toString()}"/>
    </bean>
    <bean id="tokenResponseCorrelationMap" class="member_country_specific.specific.proxyservice.tx.StoredMSConsentTokenResponseCorrelationMap">
        <constructor-arg ref="springServiceCMapspecificMSTokenResponseIdpCorProvider#{distributedEnvSuffixSpecificProxyService.toString()}"/>
    </bean>

    <!-- Correlation maps provided by Hazelcast for distributed environment, use these in productions! -->
    <!-- Authreq correlation maps -->
    <bean id="springServiceCMapspecificMSIdpCorProviderProd" class="eu.eidas.auth.commons.cache.ConcurrentMapServiceDistributedImpl" lazy-init="true">
        <property name="hazelcastInstanceInitializer" ref="eidasHazelcastInstanceInitializer"/>
        <property name="cacheName" value="specificIdpRequestCorrelationCacheService"/>
    </bean>
    <bean id="springServiceCMapspecificMSTokenIdpCorProviderProd" class="eu.eidas.auth.commons.cache.ConcurrentMapServiceDistributedImpl" lazy-init="true">
        <property name="hazelcastInstanceInitializer" ref="eidasHazelcastInstanceInitializer"/>
        <property name="cacheName" value="specificConsentRequestTokenCorrelationCacheService"/>
    </bean>
    <bean id="springServiceCMapspecificMSTokenResponseIdpCorProviderProd" class="eu.eidas.auth.commons.cache.ConcurrentMapServiceDistributedImpl" lazy-init="true">
        <property name="hazelcastInstanceInitializer" ref="eidasHazelcastInstanceInitializer"/>
        <property name="cacheName" value="specificConsentResponseTokenCorrelationCacheService"/>
    </bean>

    <!-- Correlation maps for simple dev mode -->
    <!-- Authreq correlation maps for DEV -->
    <bean id="springServiceCMapspecificMSIdpCorProviderDev" class="eu.eidas.auth.commons.cache.ConcurrentMapServiceDefaultImpl">
        <property name="expireAfterAccess" value="1800"/>
        <property name="maximumSize" value="1000"/>
    </bean>
    <bean id="springServiceCMapspecificMSTokenIdpCorProviderDev" class="eu.eidas.auth.commons.cache.ConcurrentMapServiceDefaultImpl">
        <property name="expireAfterAccess" value="1800"/>
        <property name="maximumSize" value="1000"/>
    </bean>
    <bean id="springServiceCMapspecificMSTokenResponseIdpCorProviderDev" class="eu.eidas.auth.commons.cache.ConcurrentMapServiceDefaultImpl">
        <property name="expireAfterAccess" value="1800"/>
        <property name="maximumSize" value="1000"/>
    </bean>

    <bean id="specificProxyServiceAttributesFile" class="java.lang.String">
        <constructor-arg value="eidas-attributes.xml"/>
    </bean>

    <bean id="specificAdditionalAttributesFile" class="java.lang.String">
        <constructor-arg value="additional-attributes.xml"/>
    </bean>

    <bean id="specificProxyserviceAttributesFileWithPath" class="java.lang.String">
        <constructor-arg value="#{specificProxyServiceConfigRepository}#{specificProxyServiceAttributesFile}"/>
    </bean>

    <bean id="specificProxyServiceAdditionalAttributesFileWithPath" class="java.lang.String">
        <constructor-arg value="#{specificProxyServiceConfigRepository}#{specificAdditionalAttributesFile}"/>
    </bean>

    <bean id="springManagedSpecificProxyService" class="member_country_specific.specific.proxyservice.communication.SpecificProxyService" scope="prototype">
        <property name="specificMSIdpRequestCorrelationMap" ref="specificMSIdpRequestCorrelationMap"/>
        <property name="tokenRequestCorrelationMap" ref="tokenRequestCorrelationMap"/>
        <property name="tokenResponseCorrelationMap" ref="tokenResponseCorrelationMap"/>
        <property name="specificIdpResponseServiceUrl" value="${specific.proxyservice.idp.response.service.url}"/>
        <property name="defaultSpecificIdpResponseServiceUrl" value="${default.specific.proxyservice.idp.response.service.url}"/>
        <property name="specificProxyServiceDeployedJar" value="${specificProxyServiceDeployedJar}"/>
        <property name="idpUrl" value="${idp.url}"/>
        <property name="specificProxyserviceResponseUrl" value="${specific.proxyservice.response.url}"/>
        <property name="eidasAttributesFile" ref="specificProxyserviceAttributesFileWithPath"/>
        <property name="additionalAttributesFile" ref="specificProxyServiceAdditionalAttributesFileWithPath"/>
        <property name="askConsentRequest" value="${ask.consent.request}"/>
        <property name="askConsentResponse" value="${ask.consent.response}"/>
        <property name="askConsentResponseShowOnlyEidasAttributes" value="${ask.consent.response.show.only.eidas.attributes}"/>
        <property name="askConsentResponseShowAttributeValues" value="${ask.consent.response.show.attribute.values}"/>
        <property name="issuerName" value="${issuer.name}"/>
        <property name="consentRequestLightTokenSecret" value="${consent.Request.LightToken.Secret}"/>
        <property name="consentRequestLightTokenAlgorithm" value="${consent.Request.LightToken.Algorithm}"/>
        <property name="consentResponseLightTokenSecret" value="${consent.Response.LightToken.Secret}"/>
        <property name="consentResponseLightTokenAlgorithm" value="${consent.Response.LightToken.Algorithm}"/>
    </bean>
</beans>